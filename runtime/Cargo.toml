[package]
name = "node-subspace-runtime"
version = "1.8.6"
description = "A Substrate node for commune-ai"
authors = ["Commune Community"]
homepage = "https://substrate.io/"
edition = "2021"
license = "Unlicense"
publish = false
repository = "https://github.com/commune-ai/subspace"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[package.metadata.cargo-machete]
ignored = ["scale-info"]

[dependencies]
pallet-faucet = { path = "../pallets/faucet", optional = true, default-features = false }
pallet-governance = { path = "../pallets/governance", default-features = false }
pallet-subnet-emission = { path = "../pallets/subnet_emission", default-features = false }
pallet-subspace = { path = "../pallets/subspace", default-features = false }

smallvec.workspace = true
parity-scale-codec.workspace = true
scale-info.workspace = true
ed25519-dalek.workspace = true
log.workspace = true

frame-executive.workspace = true
frame-support.workspace = true
frame-system.workspace = true
frame-try-runtime = { workspace = true, optional = true }
frame-metadata-hash-extension.workspace = true
pallet-aura.workspace = true
pallet-balances.workspace = true
pallet-grandpa.workspace = true
pallet-multisig.workspace = true
pallet-sudo.workspace = true
pallet-timestamp.workspace = true
pallet-transaction-payment.workspace = true
pallet-utility.workspace = true
sp-api.workspace = true
sp-block-builder.workspace = true
sp-consensus-aura.workspace = true
sp-core.workspace = true
sp-genesis-builder.workspace = true
sp-inherents.workspace = true
sp-offchain.workspace = true
sp-runtime.workspace = true
sp-session.workspace = true
sp-std.workspace = true
sp-storage.workspace = true
sp-transaction-pool.workspace = true
sp-version.workspace = true

# Used for the node subspace's RPCs
frame-system-rpc-runtime-api.workspace = true
pallet-transaction-payment-rpc-runtime-api.workspace = true

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# EVM Support

# Frontier
fp-evm = { workspace = true, features = ["serde"] }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }
# Frontier FRAME
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }

# Pallets' APIs
subspace-runtime-api = { path = "../pallets/subspace/rpc/runtime-api", default-features = false }
pallet-governance-api = { path = "../pallets/governance/api", default-features = false }
pallet-subnet-emission-api = { path = "../pallets/subnet_emission/api", default-features = false }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
testnet-faucet = ["pallet-faucet"]
testnet = [
    "pallet-subspace/testnet",
    "pallet-governance/testnet",
    "pallet-subnet-emission/testnet",
    "pallet-faucet/testnet",
]
std = [
    "frame-try-runtime?/std",
    "frame-system-benchmarking?/std",
    "frame-benchmarking/std",
    "parity-scale-codec/std",
    "scale-info/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "frame-try-runtime/std",
    "pallet-subspace/std",
    "pallet-governance/std",
    "pallet-faucet/std",
    "pallet-aura/std",
    "pallet-balances/std",
    "pallet-grandpa/std",
    "pallet-multisig/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-utility/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-genesis-builder/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "substrate-wasm-builder",
    "subspace-runtime-api/std",
    "fp-evm/std",
    "fp-rpc/std",
    "fp-self-contained/std",
    "pallet-base-fee/std",
    "pallet-dynamic-fee/std",
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-evm-chain-id/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-evm-precompile-simple/std",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-utility/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "pallet-subspace/runtime-benchmarks",
    "pallet-governance/runtime-benchmarks",
    "pallet-subnet-emission/runtime-benchmarks",
    "pallet-ethereum/runtime-benchmarks",
    "pallet-evm/runtime-benchmarks",
]
try-runtime = [
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "frame-try-runtime/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-base-fee/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-multisig/try-runtime",
    "pallet-governance/try-runtime",
    "pallet-subnet-emission/try-runtime",
    "pallet-faucet/try-runtime",
    "pallet-subspace/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-utility/try-runtime",
    "pallet-dynamic-fee/try-runtime",
    "pallet-ethereum/try-runtime",
    "pallet-evm/try-runtime",
    "pallet-evm-chain-id/try-runtime",
    "fp-self-contained/try-runtime",
]
metadata-hash = ["substrate-wasm-builder/metadata-hash"]
